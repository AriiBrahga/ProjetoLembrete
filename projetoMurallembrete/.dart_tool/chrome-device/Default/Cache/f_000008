define(['dart_sdk', 'packages/firebase_auth_platform_interface/src/types.dart', 'packages/firebase_auth_web/src/firebase_auth_web_confirmation_result.dart', 'packages/firebase_auth_web/src/interop/auth.dart', 'packages/firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart', 'packages/firebase_core_web/src/interop/core.dart', 'packages/firebase_auth_web/src/utils/web_utils.dart', 'packages/firebase_auth_platform_interface/src/action_code_info.dart', 'packages/firebase_auth_platform_interface/src/action_code_settings.dart'], (function load__packages__firebase_auth_web__firebase_auth_web_dart(dart_sdk, packages__firebase_auth_platform_interface__src__types$46dart, packages__firebase_auth_web__src__firebase_auth_web_confirmation_result$46dart, packages__firebase_auth_web__src__interop__auth$46dart, packages__firebase_auth_web__src__firebase_auth_web_recaptcha_verifier_factory$46dart, packages__firebase_core_web__src__interop__core$46dart, packages__firebase_auth_web__src__utils__web_utils$46dart, packages__firebase_auth_platform_interface__src__action_code_info$46dart, packages__firebase_auth_platform_interface__src__action_code_settings$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const platform_interface_user = packages__firebase_auth_platform_interface__src__types$46dart.src__platform_interface__platform_interface_user;
  const platform_interface_firebase_auth = packages__firebase_auth_platform_interface__src__types$46dart.src__platform_interface__platform_interface_firebase_auth;
  const platform_interface_recaptcha_verifier_factory = packages__firebase_auth_platform_interface__src__types$46dart.src__platform_interface__platform_interface_recaptcha_verifier_factory;
  const platform_interface_user_credential = packages__firebase_auth_platform_interface__src__types$46dart.src__platform_interface__platform_interface_user_credential;
  const platform_interface_confirmation_result = packages__firebase_auth_platform_interface__src__types$46dart.src__platform_interface__platform_interface_confirmation_result;
  const firebase_auth_web_user = packages__firebase_auth_web__src__firebase_auth_web_confirmation_result$46dart.src__firebase_auth_web_user;
  const firebase_auth_web_user_credential = packages__firebase_auth_web__src__firebase_auth_web_confirmation_result$46dart.src__firebase_auth_web_user_credential;
  const firebase_auth_web_confirmation_result = packages__firebase_auth_web__src__firebase_auth_web_confirmation_result$46dart.src__firebase_auth_web_confirmation_result;
  const auth = packages__firebase_auth_web__src__interop__auth$46dart.src__interop__auth;
  const firebase_auth_web_recaptcha_verifier_factory = packages__firebase_auth_web__src__firebase_auth_web_recaptcha_verifier_factory$46dart.src__firebase_auth_web_recaptcha_verifier_factory;
  const core$ = packages__firebase_core_web__src__interop__core$46dart.src__interop__core;
  const web_utils = packages__firebase_auth_web__src__utils__web_utils$46dart.src__utils__web_utils;
  const action_code_info = packages__firebase_auth_platform_interface__src__action_code_info$46dart.src__action_code_info;
  const action_code_settings = packages__firebase_auth_platform_interface__src__action_code_settings$46dart.src__action_code_settings;
  var firebase_auth_web = Object.create(dart.library);
  var $_set = dartx._set;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    CompleterOfvoid: () => (T.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    UserPlatformN: () => (T.UserPlatformN = dart.constFn(dart.nullable(platform_interface_user.UserPlatform)))(),
    StreamControllerOfUserPlatformN: () => (T.StreamControllerOfUserPlatformN = dart.constFn(async.StreamController$(T.UserPlatformN())))(),
    UserWebN: () => (T.UserWebN = dart.constFn(dart.nullable(firebase_auth_web_user.UserWeb)))(),
    UserN: () => (T.UserN = dart.constFn(dart.nullable(auth.User)))(),
    UserNToUserWebN: () => (T.UserNToUserWebN = dart.constFn(dart.fnType(T.UserWebN(), [T.UserN()])))(),
    UserWebNTovoid: () => (T.UserWebNTovoid = dart.constFn(dart.fnType(dart.void, [T.UserWebN()])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    _AsyncStarImplOfUserPlatformN: () => (T._AsyncStarImplOfUserPlatformN = dart.constFn(async._AsyncStarImpl$(T.UserPlatformN())))(),
    IdentityMapOfString$StreamControllerOfUserPlatformN: () => (T.IdentityMapOfString$StreamControllerOfUserPlatformN = dart.constFn(_js_helper.IdentityMap$(core.String, T.StreamControllerOfUserPlatformN())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 30000000
      });
    }
  }, false);
  var C = [void 0];
  var I = [
    "file:///C:/flutter/sdk/.pub-cache/hosted/pub.dartlang.org/firebase_auth_web-3.2.0/lib/firebase_auth_web.dart",
    "package:firebase_auth_web/firebase_auth_web.dart"
  ];
  var _initialized = dart.privateName(firebase_auth_web, "_initialized");
  var _webAuth = dart.privateName(firebase_auth_web, "_webAuth");
  var _delegate = dart.privateName(firebase_auth_web, "_delegate");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  firebase_auth_web.FirebaseAuthWeb = class FirebaseAuthWeb extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    static registerWith(registrar) {
      platform_interface_firebase_auth.FirebaseAuthPlatform.instance = firebase_auth_web.FirebaseAuthWeb.instance;
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.instance;
    }
    static get instance() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    get [_delegate]() {
      let t0;
      t0 = this[_webAuth];
      return t0 == null ? this[_webAuth] = auth.getAuthInstance(core$.app(this.app.name)) : t0;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app});
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      return this;
    }
    get currentUser() {
      let webCurrentUser = this[_delegate].currentUser;
      if (webCurrentUser == null) {
        return null;
      }
      return new firebase_auth_web_user.UserWeb.new(this, dart.nullCheck(this[_delegate].currentUser));
    }
    set currentUser(value) {
      super.currentUser = value;
    }
    get tenantId() {
      return this[_delegate].tenantId;
    }
    set tenantId(tenantId) {
      this[_delegate].tenantId = tenantId;
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](appName) != null)) dart.assertFailed(null, I[0], 136, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](appName)).add(userPlatform);
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this[_delegate].applyActionCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          return dart.nullCheck(web_utils.convertWebActionCodeInfo(yield this[_delegate].checkActionCode(code)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this[_delegate].confirmPasswordReset(code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].createUserWithEmailAndPassword(email, password));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          return yield this[_delegate].fetchSignInMethodsForEmail(email);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getRedirectResult() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* getRedirectResult() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].getRedirectResult());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        yield this[_initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        yield this[_initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        yield this[_initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this[_delegate].sendPasswordResetEmail(email, web_utils.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this[_delegate].sendSignInLinkToEmail(email, web_utils.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    get languageCode() {
      return this[_delegate].languageCode;
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        this[_delegate].languageCode = languageCode;
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        this[_delegate].settings.appVerificationDisabledForTesting = appVerificationDisabledForTesting;
      }).bind(this));
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        try {
          return this[_delegate].setPersistence(web_utils.convertPlatformPersistence(persistence));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].signInAnonymously());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].signInWithCredential(dart.nullCheck(web_utils.convertPlatformCredential(credential))));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].signInWithCustomToken(token));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].signInWithEmailAndPassword(email, password));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].signInWithEmailLink(email, emailLink));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* signInWithPhoneNumber() {
        try {
          let verifier = auth.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this, yield this[_delegate].signInWithPhoneNumber(phoneNumber, verifier));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithPopup() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this[_delegate].signInWithPopup(web_utils.convertPlatformAuthProvider(provider)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      return async.async(dart.void, (function* signInWithRedirect() {
        try {
          return this[_delegate].signInWithRedirect(web_utils.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this[_delegate].signOut();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          this[_delegate].useAuthEmulator("http://" + host + ":" + dart.str(port));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          return yield this[_delegate].verifyPasswordResetCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[0] || CT.C0;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not supported on the web. Please use `signInWithPhoneNumber` instead."));
    }
  };
  (firebase_auth_web.FirebaseAuthWeb.__ = function() {
    this[_initialized] = T.CompleterOfvoid().new();
    this[_webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  (firebase_auth_web.FirebaseAuthWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[_initialized] = T.CompleterOfvoid().new();
    this[_webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: app});
    firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_set](app.name, T.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[$_set](app.name, T.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[$_set](app.name, T.StreamControllerOfUserPlatformN().broadcast());
    this[_delegate].onAuthStateChanged.map(T.UserWebN(), dart.fn(webUser => {
      if (!this[_initialized].isCompleted) {
        this[_initialized].complete();
      }
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, webUser);
      }
    }, T.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[$_get](app.name)).add(webUser);
    }, T.UserWebNTovoid()));
    this[_delegate].onIdTokenChanged.map(T.UserWebN(), dart.fn(webUser => {
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, webUser);
      }
    }, T.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[$_get](app.name)).add(webUser);
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](app.name)).add(webUser);
    }, T.UserWebNTovoid()));
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  dart.addTypeTests(firebase_auth_web.FirebaseAuthWeb);
  dart.addTypeCaches(firebase_auth_web.FirebaseAuthWeb);
  dart.setMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web.FirebaseAuthWeb.__proto__),
    setInitialValues: dart.fnType(firebase_auth_web.FirebaseAuthWeb, [], {currentUser: dart.nullable(core.Map$(core.String, dart.dynamic)), languageCode: dart.nullable(core.String)}, {}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    [_delegate]: auth.Auth,
    tenantId: dart.nullable(core.String),
    languageCode: core.String
  }));
  dart.setSetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setLibraryUri(firebase_auth_web.FirebaseAuthWeb, I[1]);
  dart.setFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web.FirebaseAuthWeb.__proto__),
    [_initialized]: dart.fieldType(async.Completer$(dart.void)),
    [_webAuth]: dart.fieldType(dart.nullable(auth.Auth))
  }));
  dart.defineLazy(firebase_auth_web.FirebaseAuthWeb, {
    /*firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _authStateChangesListeners(_) {},
    /*firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _idTokenChangesListeners(_) {},
    /*firebase_auth_web.FirebaseAuthWeb._userChangesListeners*/get _userChangesListeners() {
      return new (T.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _userChangesListeners(_) {}
  }, false);
  dart.trackLibraries("packages/firebase_auth_web/firebase_auth_web.dart", {
    "package:firebase_auth_web/firebase_auth_web.dart": firebase_auth_web
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["firebase_auth_web.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/firebase_auth_web/firebase_auth_web.dart.lib.js"}');
  // Exports:
  return {
    firebase_auth_web: firebase_auth_web
  };
}));

//# sourceMappingURL=firebase_auth_web.dart.lib.js.map
